<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding Notes</title>
    <description>Hey. I&#39;m a student at Learn.co Full-Stack Web Development Bootcamp. I write about Ruby on Rails, meditation and accelerated learning.
</description>
    <link>http://thelucasmoore.github.io/</link>
    <atom:link href="http://thelucasmoore.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 26 Jan 2016 22:51:52 -0600</pubDate>
    <lastBuildDate>Tue, 26 Jan 2016 22:51:52 -0600</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>My Current Dev Environment and Workflow</title>
        <description>&lt;p&gt;I enter full-time-bootcamp-mode in less than two weeks. I’m learning everything I can about optimizing my work flow, strengthening specific skills and I’m reading as much about web development as possible. I am building a workshop to practice my new craft in. Here’s what it looks like right now.&lt;/p&gt;

&lt;h3 id=&quot;my-development-environment&quot;&gt;My Development Environment&lt;/h3&gt;

&lt;p&gt;In this screenshot you can see this very article as I was writing it. Only the text outline is in the image, but the development environment I’m using is what’s important.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/workflow.png&quot; alt=&quot;workflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I work with &lt;em&gt;Firefox&lt;/em&gt;, &lt;em&gt;Sublime Text 3&lt;/em&gt; and &lt;em&gt;Terminal&lt;/em&gt; each as a full screen app. I swipe between them with a three fingers. 
This arrangement is the quickest way to code that I’ve found. I code in Sublime in the center and can swipe left to see changes in the browser or swipe right to access Terminal.&lt;/p&gt;

&lt;h3 id=&quot;workflow-magic-with-package-control&quot;&gt;Workflow Magic with Package Control&lt;/h3&gt;

&lt;p&gt;I found &lt;a href=&quot;https://scotch.io/bar-talk/best-of-sublime-text-3-features-plugins-and-settings&quot;&gt;this amazing article&lt;/a&gt; about optimizing &lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;Sublime Text&lt;/a&gt; to do such magical things with &lt;em&gt;Package Control&lt;/em&gt;. I giggled a few times as the reality of Package Control washed over me. It’s full of so many amazing shortcuts!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;After installing Package Control&lt;/a&gt;, each repetitive task that had been part of my development process now has an quicker and more elegant solution. And in way fewer keystrokes. Those saved seconds add up into minutes and hours across a day of work.&lt;/p&gt;

&lt;p&gt;I installed the Package Control script in Sublime text by copying and pasting the code and adding it into the console with &lt;code&gt;Tab + ~&lt;/code&gt;. I installed the following packages by hitting &lt;code&gt;Command + Shift + P&lt;/code&gt;to open the Command Palette, and typing &lt;code&gt;Install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/package_control.png&quot; alt=&quot;package control&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then press &lt;code&gt;Enter&lt;/code&gt; and search the following packages and install them by hitting enter again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/install.png&quot; alt=&quot;install&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;advanced-new-file&quot;&gt;Advanced New File&lt;/h3&gt;

&lt;h1 id=&quot;time-saved-7-seconds-a-save-which-is-about-15-minutes-a-day-if-i-save-files-150-times&quot;&gt;Time Saved: 7 seconds a save, which is about 15 minutes a day if I save files 150 times.&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/advanced.png&quot; alt=&quot;advanced&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When making a new file in Sublime, the default requires us to hit &lt;code&gt;Command + S&lt;/code&gt; to save the file, to name it, then to save it. It took a few seconds each time I repeated the task, which was often. With &lt;em&gt;AdvancedNewFile&lt;/em&gt; installed, a menu pops up instantly in the status bar to name and save the new file just created.&lt;/p&gt;

&lt;h3 id=&quot;git-for-sublime&quot;&gt;Git for Sublime&lt;/h3&gt;

&lt;h1 id=&quot;time-saved-30-seconds-a-commit-which-is-about-10-minutes-a-day-if-i-commit-to-github-20-times-a-day&quot;&gt;Time Saved: 30 seconds a commit, which is about 10 minutes a day if I commit to Github 20 times a day.&lt;/h1&gt;

&lt;p&gt;Throught the same shortcut process above, I can now use Git right from Sublime Text, to stage, commit and push all my files to Github.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Command + Shift + P&lt;/code&gt;
Type “Quick Commit” to stage all the files and write your commit message. 
&lt;code&gt;Command + Shift + P&lt;/code&gt;
Type “Push” to push those changes to Github’s remote servers.&lt;/p&gt;

&lt;h3 id=&quot;emmet&quot;&gt;Emmet&lt;/h3&gt;

&lt;h1 id=&quot;time-saved-its-hard-to-estimate-but-ill-roughly-guess-itll-save-me-oodles-of-time&quot;&gt;Time Saved: It’s hard to estimate, but I’ll roughly guess it’ll save me oodles of time.&lt;/h1&gt;

&lt;p&gt;Emmet is a HTML text-expander. I type a snippet in SublimeText and press &lt;code&gt;Tab&lt;/code&gt; to fill in the expanded and formatted code snippet.&lt;/p&gt;

&lt;p&gt;It allows logical commands like writing “link” &lt;code&gt;+ Tab&lt;/code&gt; to autocomplete to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It also has ability to make nested syblings by typing &lt;code&gt;div&amp;gt;ul&amp;gt;li&lt;/code&gt; I can generate the code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Those are my favorite three packages for Package Control. I’d appreciate any other work flow tips or your critiques of mine. You can reach out to me on &lt;a href=&quot;https://twitter.com/thelucasmoore&quot;&gt;Twitter&lt;/a&gt; or my email in the footer below.&lt;/p&gt;

&lt;h1 id=&quot;prepare-the-preparations&quot;&gt;Prepare the Preparations&lt;/h1&gt;

&lt;p&gt;The last things I’m doing before the bootcamp starts in polishing up my &lt;a href=&quot;https://www.codecademy.com/en/tracks/javascript&quot;&gt;Javascript skills on Codecademy&lt;/a&gt; and saving the most useful Web Development articles I find and tagging them carefully in &lt;a href=&quot;https://evernote.com&quot;&gt;Evernote&lt;/a&gt;, for later reference.&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Jan 2016 00:00:00 -0600</pubDate>
        <link>http://thelucasmoore.github.io/2016/01/26/My-Current-Dev-Environment-And-Workflow-Tips.html</link>
        <guid isPermaLink="true">http://thelucasmoore.github.io/2016/01/26/My-Current-Dev-Environment-And-Workflow-Tips.html</guid>
        
        
      </item>
    
      <item>
        <title>How and Why I Made this Blog</title>
        <description>&lt;p&gt;This website is all about what I learn as a Web Developer as I complete the &lt;a href=&quot;http://learn.co&quot;&gt;Learn.co Coding Bootcamp&lt;/a&gt;. Here live my lessons, notes &amp;amp; reflections as I move towards a career as a Full-Stack Developer. 
&lt;!--excerpt--&gt;&lt;/p&gt;

&lt;p&gt;I believe in learning by doing, so my first lesson is building this very blog, venturing away from the complicated simplicity of Wordpress. I still have my &lt;a href=&quot;http://thelucasmoore.com&quot;&gt;personal blog&lt;/a&gt; for all things personal, but am writing about Ruby on Rails development here.&lt;/p&gt;

&lt;h3 id=&quot;how-i-made-this-blog&quot;&gt;How I Made this Blog&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/jekyll.png&quot; alt=&quot;Jekyll Documentation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This blog is built with Jekyll and hosted on Github Pages. After reading through the documentation for &lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;Jekyll&lt;/a&gt;, &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; and &lt;a href=&quot;http://daringfireball.net/projects/markdown/basics&quot;&gt;Markdown&lt;/a&gt;, I built this site in about five minutes and then started writing this post. Here’s how:&lt;/p&gt;

&lt;h1 id=&quot;command-line-web-design&quot;&gt;1. Command Line Web Design&lt;/h1&gt;

&lt;p&gt;Modern web design uses the command line to move swiftly. One can construct complete sites, like this one, in a few lines of code. That’s assuming your development environment is set up, which you can learn in &lt;a href=&quot;http://webdesign.tutsplus.com/articles/the-command-line-for-web-design-introduction--cms-23493&quot;&gt;this great tutorial series&lt;/a&gt; on Terminal for Web Design.&lt;/p&gt;

&lt;h1 id=&quot;make-a-new-jekyll-blog-in-terminal&quot;&gt;2. Make a New Jekyll Blog in Terminal&lt;/h1&gt;

&lt;p&gt;With the Jekyll gem installed, I typed the following into my terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll new my_blog_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This makes a new Jekyll blog, all tidy and ready to go.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cd my_blog_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This brings me into that newly created folder containing the Jekyll site. I also opened up this folder in &lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;Sublime Text&lt;/a&gt; to edit it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This runs the site on localhost, so I can see changes I make at localhost:4000 in my browser.&lt;/p&gt;

&lt;p&gt;Lastly, I edited the &lt;code&gt;_config.yml&lt;/code&gt; to my own information in Sublime.&lt;/p&gt;

&lt;h1 id=&quot;host-it-on-github&quot;&gt;3. Host it on Github&lt;/h1&gt;

&lt;p&gt;I also have this folder set up as a repository on &lt;a href=&quot;https://github.com/TheLucasMoore/thelucasmoore.github.io&quot;&gt;my Github&lt;/a&gt;. Any repository that is set as &lt;em&gt;your-username&lt;/em&gt;.github.io is automatically structured to work on Github Pages. When I update the blog from my computer and push the updates to Github, this website updates. Effortless.&lt;/p&gt;

&lt;h1 id=&quot;write-in-markdownmk&quot;&gt;4. Write in &lt;a href=&quot;http://daringfireball.net/projects/markdown/basics&quot;&gt;Markdown&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts.png&quot; alt=&quot;New Blog Post&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Markdown is a beautifully simple way to write for the web. The syntax took me about 15 minutes to learn, since it’s so intuitive. To make a new blog post, I just create a new file in the &lt;code&gt;_posts&lt;/code&gt; folder that follows the &lt;code&gt;YEAR-MONTH-DAY-title.markdown&lt;/code&gt; naming convention.&lt;/p&gt;

&lt;h1 id=&quot;push-to-a-static-web-page&quot;&gt;5. Push to a Static Web Page&lt;/h1&gt;

&lt;p&gt;Finally, any time I update this site, I push the changes to Github. Jekyll does all the work of compiling the file structure and converting the Markdown to HTML. There is no server database, simply an agile static page.&lt;/p&gt;

</description>
        <pubDate>Sat, 16 Jan 2016 00:00:00 -0600</pubDate>
        <link>http://thelucasmoore.github.io/2016/01/16/How-and-Why-I-Created-This-Blog.html</link>
        <guid isPermaLink="true">http://thelucasmoore.github.io/2016/01/16/How-and-Why-I-Created-This-Blog.html</guid>
        
        
      </item>
    
  </channel>
</rss>
